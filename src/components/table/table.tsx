import React, { useState } from 'react';
import { Table, Button, Modal, message } from 'antd';

interface User {
  id: number;
  avatar: string;
  fullName: string;
  email: string;
  gender: string;
  birthDate: string;
  role: string;
}

const UserTable: React.FC = () => {
  const [users, setUsers] = useState<User[]>([
    {
      id: 1,
      avatar: 'https://via.placeholder.com/40',
      fullName: '–ö–∞–∑–∏–º–∏—Ä –ê–Ω—Ç–æ–Ω–∏–Ω–∞ –†.',
      email: 'mail@mail.ru',
      gender: '–ñ–µ–Ω—Å–∫–∏–π',
      birthDate: '24.10.1998',
      role: '–ú–µ–¥—Å–µ—Å—Ç—Ä–∞',
    },
  ]);
  const [isModalVisible, setIsModalVisible] = useState(false);
  const [editingUser, setEditingUser] = useState<User | null>(null);

  const handleEdit = (user: User) => {
    setEditingUser(user);
    setIsModalVisible(true);
  };

  const handleDelete = (userId: number) => {
    Modal.confirm({
      title: '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?',
      onOk: () => {
        setUsers((prev) => prev.filter((user) => user.id !== userId));
        message.success('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω');
      },
    });
  };

  const columns = [
    {
      title: '–ê–≤–∞—Ç–∞—Ä',
      dataIndex: 'avatar',
      key: 'avatar',
      render: (avatar: string) => (
        <img
          src={avatar}
          alt="avatar"
          style={{ borderRadius: '50%', width: 40 }}
        />
      ),
    },
    {
      title: '–§–ò–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      dataIndex: 'fullName',
      key: 'fullName',
    },
    {
      title: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
      dataIndex: 'email',
      key: 'email',
    },
    {
      title: '–ü–æ–ª',
      dataIndex: 'gender',
      key: 'gender',
    },
    {
      title: '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è',
      dataIndex: 'birthDate',
      key: 'birthDate',
    },
    {
      title: '–†–æ–ª—å',
      dataIndex: 'role',
      key: 'role',
    },
    {
      title: '',
      key: 'actions',
      render: (_: any, user: User) => (
        <div style={{ display: 'flex', gap: '10px' }}>
          <Button type="link" onClick={() => handleEdit(user)}>
            ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
          </Button>
          <Button type="link" danger onClick={() => handleDelete(user.id)}>
            üóë –£–¥–∞–ª–∏—Ç—å
          </Button>
        </div>
      ),
    },
  ];

  return (
    <div>
      <Table
        dataSource={users.map((user) => ({ ...user, key: user.id }))}
        columns={columns}
        pagination={false}
      />
      <Modal
        open={isModalVisible}
        title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        onCancel={() => setIsModalVisible(false)}
        footer={null}
      >
        {/* –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
        <p>–§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</p>
      </Modal>
    </div>
  );
};

export default UserTable;
